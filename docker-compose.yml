services:
  db:
    container_name: postgres
    image: postgres:14.7
    environment:
      POSTGRES_USER: amigoscode
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - db:/data/postgres
    ports:
      - "5332:5432"
    networks:
      - db
    restart: unless-stopped
  yyy-api:
    container_name: yyy-api
    image: yxqnyyy/yyy-api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/customer
    ports:
      - "8088:8080"
    networks:
      - db
    depends_on:
      - db
    restart: unless-stopped
  yyy-web:
    restart: unless-stopped
    container_name: yyy-web
    image: yxqnyyy/yyy-web
    depends_on:
      - yyy-api
    links:
      - yyy-api
    build:
      context: ../../Frontend/frontend
      dockerfile: Dockerfile
    ports:
      - "8089:80"
    networks:
      - db
    volumes:
      - ../../Frontend/frontend/conf.d:/etc/nginx/conf.d
networks:
  db:
    driver: bridge

volumes:
  db:
